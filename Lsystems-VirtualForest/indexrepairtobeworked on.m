n3  =   size(Trunk,1)
n4  =   n3*2*20+1
End =   n4-2*n3 +1
% max(max(Faces))
Trunk_o(End:end,:)

Facess  =   Faces(all((Faces<=End)'),:)
triplot(Faces,Trunk_t(:,1),Trunk_t(:,2))
hold on

Trunk_t2    =   [[Trunk_o(End-2*n3:End-n3-1,1)  *4;Trunk_o(End-n3:End-1  ,1)    *3 ;...
                  Trunk_o(End:end-n3,1)         *2;Trunk_o(end-n3+1:end,1)      *1     ],...
                 [Trunk_o(End-2*n3:End-n3-1,2)  *4;Trunk_o(End-n3:End-1  ,2)    *3 ;...
                  Trunk_o(End:end-n3,2)         *2;Trunk_o(end-n3+1:end,2)      *1     ],...
                 [Trunk_o(End-2*n3:End-n3-1,3)    ;Trunk_o(End-n3:End-1  ,3)       ;...
                  Trunk_o(End:end-n3,3)           ;Trunk_o(end-n3+1:end,3)             ]];
Trunk_t2    =   [Trunk_t2;[0 0 100]]
Faces2      =   delaunay(Trunk_t2(:,1),Trunk_t2(:,2),{'QJ'});
patch(  'Faces'         ,Faces2     ,...
                        'FaceAlpha'         ,0              ,...
                        'Vertices'          ,Trunk_t2); 
Facess2     =   Faces2(any((Faces2>n3*2)'),:);
figure
patch(  'Faces'         ,Facess2     ,...
                        'FaceAlpha'         ,0              ,...
                        'Vertices'          ,Trunk_t2);

Facesss2     =   Facess2+End-2*n3-1;%%%%%check this              
Trunk_o2     =   [Trunk_o;[0 0 100]];
patch(  'Faces'         ,Facesss2     ,...
                        'FaceAlpha'         ,1              ,...
                        'EdgeColor'   ,[0 1 0]              ,... 
                        'Vertices'          ,Trunk_o2);
                    
patch(  'Faces'         ,Facess      ,...
                        'FaceAlpha'         ,1              ,...
                        'Vertices'          ,Trunk_o2);
Faces3      =   [Facess;Facesss2];
figure
patch(  'Faces'         ,Faces3      ,...
                        'FaceAlpha'         ,1              ,...
                        'Vertices'          ,Trunk_o2);


triplot(Faces2,Trunk_t2(:,1),Trunk_t2(:,2))